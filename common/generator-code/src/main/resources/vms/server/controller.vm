package ${package}.controller;

import cn.bunny.dao.pojo.result.Result;
import cn.bunny.dao.pojo.result.ResultCodeEnum;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import reactor.core.publisher.Mono;
import cn.bunny.dao.pojo.result.PageResult;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import java.util.List;

/**
 * <p>
 * ${tableName}表 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Tag(name = "${tableName}" , description = "${tableName}相关接口" )
@RestController
@RequestMapping("${requestMapping}/${classLowercaseName}" )
public class ${classUppercaseName}Controller {

    @Autowired
    private ${classUppercaseName}Service ${classLowercaseName}Service;

    @Operation(summary = "分页查询${tableName}" , description = "分页查询${tableName}" )
    @GetMapping("get${classUppercaseName}List/{page}/{limit}" )
    public Result<PageResult<${classUppercaseName}Vo>> get${classUppercaseName}List(
            @Parameter(name = "page" , description = "当前页" , required = true)
            @PathVariable("page" ) Integer page,
            @Parameter(name = "limit" , description = "每页记录数" , required = true)
            @PathVariable("limit" ) Integer limit,
            ${classUppercaseName}Dto dto) {
        Page<${classUppercaseName}> pageParams = new Page<>(page, limit);
        PageResult<${classUppercaseName}Vo> pageResult = ${classLowercaseName}Service.get${classUppercaseName}List(pageParams, dto);
        return Mono.just(Result.success(pageResult));
    }

    @Operation(summary = "添加${tableName}" , description = "添加${tableName}" )
    @PostMapping("add${classUppercaseName}" )
    public Result<String> add${classUppercaseName}(@Valid @RequestBody ${classUppercaseName}AddDto dto) {
            ${classLowercaseName}Service.add${classUppercaseName}(dto);
        return Mono.just(Result.success(ResultCodeEnum.ADD_SUCCESS));
    }

    @Operation(summary = "更新${tableName}" , description = "更新${tableName}" )
    @PutMapping("update${classUppercaseName}" )
    public Result<String> update${classUppercaseName}(@Valid @RequestBody ${classUppercaseName}UpdateDto dto) {
            ${classLowercaseName}Service.update${classUppercaseName}(dto);
        return Mono.just(Result.success(ResultCodeEnum.UPDATE_SUCCESS));
    }

    @Operation(summary = "删除${tableName}" , description = "删除${tableName}" )
    @DeleteMapping("delete${classUppercaseName}" )
    public Result<String> delete${classUppercaseName}(@RequestBody List<Long> ids) {
            ${classLowercaseName}Service.delete${classUppercaseName}(ids);
        return Mono.just(Result.success(ResultCodeEnum.DELETE_SUCCESS));
    }
}